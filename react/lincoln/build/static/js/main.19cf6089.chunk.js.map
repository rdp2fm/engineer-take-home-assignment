{"version":3,"sources":["CustomToolbar.js","utils.js","Table.js","App.js","index.js"],"names":["CustomToolbar","classes","this","props","Fragment","Tooltip","title","extensions","onChange","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","loadedFIle","target","result","onerror","Error","loadFile","then","data","jsonObj","base64String","replace","fetch","method","headers","body","JSON","stringify","response","json","status","window","location","reload","catch","error","console","onError","errMsg","alert","IconButton","className","iconButton","onClick","handleClick","deleteIcon","React","Component","withStyles","name","Table","state","page","count","totalDonation","getData","rowsPerPage","log","donationTotal","reduce","prev","cur","donation_amount","toFixed","setState","options","filter","filterType","responsive","search","selectableRows","customToolbar","columns","label","sort","filterOptions","names","logic","filters","print","amount","indexOf","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19cf6089.chunk.js","sourcesContent":["import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { FilePicker } from 'react-file-picker'\nimport loadFile from \"./utils\";\nconst defaultToolbarStyles = {\n    iconButton: {\n    },\n};\n\n\nclass CustomToolbar extends React.Component {\n\n    componentDidMount(){\n    }\n\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Tooltip title={\"Upload CSV\"}>\n                    <FilePicker\n                        extensions={['csv']}\n                        onChange={file => (\n                            loadFile(file).then(function(data){\n                                var base64 = data.replace(\"data:text/csv;base64,\",\"\");\n                                const jsonObj = { base64String: base64 };\n\n                                fetch('https://36hidzapk7.execute-api.us-east-1.amazonaws.com/Prod/', {\n                                    method: 'POST', // or 'PUT'\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                    },\n                                    body: JSON.stringify(jsonObj),\n                                })\n                                    .then((response) => response.json())\n                                    .then((data) => {\n                                        if(data.status == \"OK\"){\n                                            window.location.reload();\n                                        }\n                                    })\n                                    .catch((error) => {\n                                        console.error('Error:', error);\n                                    });\n                            })\n                        )}\n                        onError={errMsg => alert(errMsg)}>\n                            <IconButton className={classes.iconButton} onClick={this.handleClick}>\n                            <AddIcon className={classes.deleteIcon} />\n                            </IconButton>\n                        </FilePicker>\n\n                </Tooltip>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default withStyles(defaultToolbarStyles, { name: \"CustomToolbar\" })(CustomToolbar);","export default function loadFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n\n        reader.readAsDataURL(file)\n\n        reader.onloadend = loadedFIle => resolve(loadedFIle.target.result)\n\n        reader.onerror = () => reject(new Error('There was an error uploading the file'))\n    })\n}","import React from 'react';\n\nimport MUIDataTable from \"mui-datatables\";\nimport CustomToolbar from \"./CustomToolbar\";\n\nclass Table extends React.Component {\n    state = {\n        page: 0,\n        count: 10,\n        data: [],\n        totalDonation: 0\n    };\n\n    componentDidMount() {\n        this.getData(this.state.page, this.state.count);\n    }\n\n    getData = (page, rowsPerPage) => {\n        fetch(`https://36hidzapk7.execute-api.us-east-1.amazonaws.com/Prod/`)\n            .then(response => {\n                console.log(response);\n                if (response.status >= 400) {\n                    throw new Error('Bad response from server');\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log('data: ', data);\n                const donationTotal = data.reduce((prev, cur) => prev + cur.donation_amount, 0);\n                this.state.totalDonation = donationTotal.toFixed(2);\n\n                console.log('data: ', data);\n                this.setState({\n                    page,\n                    data,\n                });\n            });\n    };\n\n\n\n\n\n\n    render() {\n        const columns = [\n            {\n                name: \"donor_id\",\n                label: \"Donor ID\",\n                options : {\n                    filter: false,\n                    sort: false\n                }\n\n            },\n            {\n                name: \"donor_name\",\n                label: \"Donor Name\",\n                options: {\n                    filter: true,\n                    filterOptions: {\n                        names: [\"Known Donors\"],\n                        logic(name, filters) {\n\n                            return name == \"Anonymous\";\n                        }\n                    },\n                    print: false,\n                    sort: true,\n                }\n            },\n            {\n                name: \"donor_email\",\n                label: \"Donor Email\",\n                options: {\n                    filter: false,\n                    sort: false,\n                }\n            },\n            {\n                name: \"donor_gender\",\n                label: \"Donor Gender\",\n                options: {\n                    filter: false,\n                    sort: false,\n                }\n            },\n            {\n                name: \"donor_address\",\n                label: \"Donor Address\",\n                options: {\n                    filter: false,\n                    sort: false,\n                }\n            },\n            {\n                name: \"donation_amount\",\n                label: \"Donation Amount\",\n                options: {\n                    filter: true,\n                    filterOptions: {\n                        names: [\"< $100\", \"< $500\", \"> $500\"],\n                        logic(amount, filters) {\n                            const show = (filters.indexOf(\"< $100\") >= 0 && amount <= 100) ||\n                                (filters.indexOf(\"< $500\") >= 0 && amount > 100 && amount <= 500) ||\n                                (filters.indexOf(\"> $500\") >= 0 && amount > 500);\n                            const filtered = !show\n                            return filtered;\n                        }\n                    },\n                    print: false,\n                    sort: true,\n                }\n            },\n        ];\n        const { data } = this.state;\n\n        const options = {\n            filter: true,\n            filterType: 'dropdown',\n            responsive: 'scroll',\n            search: false,\n            selectableRows : false,\n            customToolbar: () => {\n                return (\n                    <CustomToolbar/>\n                );\n            }\n\n        };\n\n        return (\n            <MUIDataTable\n                title={`Total Donations: $${this.state.totalDonation || \"\"}`}\n                data={data}\n                columns={columns}\n                options={options}\n            />\n        );\n    }\n}\n\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './Table'\n\nfunction App() {\n  return (\n      <Table />\n      );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}